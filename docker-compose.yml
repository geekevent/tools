###############################################################################
#                          Generated on docker.io                          #
###############################################################################
version: "2"
services:

    mysql:
      image: mysql:5.6
      container_name: ${PROJECT_NAME}-mysql
      volumes:
        - ./var/docker/database:/var/lib/mysql
        - ./docker/mysql/init:/docker-entrypoint-initdb.d
      environment:
        - MYSQL_DATABASE=${DB_NAME}
        - MYSQL_USER=${DB_USER}
        - MYSQL_PASSWORD=${DB_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      network_mode: bridge

    webserver:
      image: nginx:alpine
      container_name: ${PROJECT_NAME}-webserver
      working_dir: /application
      links:
        - php-fpm
      volumes:
          - .:/application
          - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      environment:
        - VIRTUAL_HOST=${PROJECT_NAME}.local
      network_mode: bridge
      expose:
        - 80

    php-fpm:
      build: docker/php-fpm
      container_name: ${PROJECT_NAME}-php-fpm
      working_dir: /application
      network_mode: bridge
      links:
        - mysql
      volumes:
        - .:/application
        - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini
      expose:
        - 9000

    nginx-gen:
      restart: always
      image: jwilder/docker-gen
      container_name: ${PROJECT_NAME}-nginx-gennginx-gen
      volumes:
        - "/var/run/docker.sock:/tmp/docker.sock:ro"
        - "./var/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
      volumes_from:
        - webserver
      entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

    letsencrypt-nginx-proxy-companion:
        restart: always
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: ${PROJECT_NAME}-letsencrypt-nginx-proxy-companion
        volumes_from:
          - webserver
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
          - "./var/proxy/certs:/etc/nginx/certs:rw"
        environment:
          - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
