security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_ORGA
        ROLE_ORGA: ROLE_CHEF_DE_POLE
        ROLE_CHEF_DE_POLE: ROLE_STAFF
        ROLE_STAFF: ROLE_VISITEUR
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        main:
            entity:
                class: App\Entity\User
                property: login
    password_hashers:
        App\Entity\User:
            algorithm: auto
            cost: 4
            time_cost: 5
            memory_cost: 10
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: main
            logout:
                path: logout
                target: user_login
            form_login: ~
            entry_point: App\Security\FormAuthenticator
            custom_authenticator: App\Security\FormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_STAFF }
